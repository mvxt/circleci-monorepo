#######################
# WORKFLOWS DEFINITION
#######################
parameters:
  run_main:
    description: "runs the main gatekeeper job"
    type: boolean
    default: true
  service1:
    description: "runs specifically Service 1"
    type: boolean
    default: false
  service2:
    description: "runs specifically Service 2"
    type: boolean
    default: false

workflows:
  version: 2
  primary: # Always triggers by default
    when: << pipeline.parameters.run_main >>
    jobs:
      - build:
          paths: |
            service1
            service2

  service_1:
    when: << pipeline.parameters.service1 >>
    jobs:
      - service1

  service_2:
    when: << pipeline.parameters.service2 >>
    jobs:
      - service2

##################
# JOBS DEFINITION
##################
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/golang
    working_directory: ~/circleci-monorepo
    parameters:
      paths:
        description: "Folder paths to check for changes. Should match workflow boolean flags"
        type: string
    steps:
      - checkout
      - run:
          name: Determine which projects have changed and make API call accordingly
          command: |
            upstream="$(git merge-base HEAD origin/master)"
            echo "Comparing to upstream commit $upstream"

            if [[ -z "$upstream" ]]; then
              echo "git merge-base failed"
              exit 1
            fi
  
            # Print the diff
            PAGER=cat git diff --stat=80 $upstream -- << parameters.paths >>
  
            # Halt if no diff
            if git diff --quiet $upstream -- << parameters.paths >>; then
              echo "Skipping job, no files modified"
              circleci-agent step halt
            fi

            echo << parameters.paths >>
            # Iterate through paths
            #    curl -s -u ${CIRCLE_TOKEN}: \
            #      -d build_parameters[CIRCLE_JOB]=${project} \
            #     https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH

  service1:
    working_directory: /go/src/github.com/tufin/circleci-monorepo
    docker:
      - image: tufin/circleci-golang
    environment:
      PROJECT_NAME: service1
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - run:
          name: Build
          command: |
            /scripts/go_build.sh ${PROJECT_NAME} ${PROJECT_NAME}
      - run:
          name: Run Tests
          command: |
            /scripts/go_test.sh ${TEST_RESULTS} ${PROJECT_NAME}
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results
  service2:
    working_directory: /go/src/github.com/tufin/circleci-monorepo
    docker:
      - image: tufin/circleci-golang
    environment:
      PROJECT_NAME: service2
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - run:
          name: Build
          command: |
            /scripts/go_build.sh ${PROJECT_NAME} ${PROJECT_NAME}
      - run:
          name: Run Tests
          command: |
            /scripts/go_test.sh ${TEST_RESULTS} ${PROJECT_NAME}
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results

